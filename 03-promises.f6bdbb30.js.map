{"mappings":"kjBAIMA,EAAM,CACVC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASG,iBAAiB,gBAwD1C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IA9DPR,EAAIC,OAAOe,iBAAiB,UAE5B,SAAkBC,GAChBA,EAAIC,iBAgBN,SAA4BC,GAK1B,I,IAJAC,EAD0BD,EAC1BX,MACAa,EAF0BF,EAE1BG,KAGSC,EALiBJ,EAG1BK,OAEyBC,EAAW,EAAGF,EAAI,EAAGA,IAAKE,IACjDnB,EAAcmB,EAAUL,EAAYC,EAAWI,GAC9CC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,M,OACnBoB,EAAAC,GAASC,OAAOC,QACd,uBAA0CC,SAAfzB,EAAS,QAAYyB,OAANxB,EAAM,MAChD,CACAyB,SAAU,OACVC,QAAS,K,IAKVC,OAAM,SAAAR,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,M,OACpBoB,EAAAC,GAASC,OAAOM,QACd,sBAAuCJ,SAAfzB,EAAS,QAAYyB,OAANxB,EAAM,MAC7C,CACEyB,SAAU,OACVC,QAAS,K,IArCfG,EAKMC,EAAM,GAGVtC,EAAII,aAAamC,SAAQ,SAAAC,GACvBF,EAAIE,EAAKC,MAAQC,OAAOF,EAAKG,M,IAGxBL,IATX,IAEQA,C","sources":["src/js/03-promises.js"],"sourcesContent":["import '../sass/_common.scss';\nimport Notiflix from 'notiflix';\n\n\nconst ref = {\n  formEl: document.querySelector('.form'),\n  inputsFormEl: document.querySelectorAll('.form input'),\n};\n\nref.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  createPromiseQueue(formToObj());\n}\n\nfunction formToObj() {\n\n  const obj = {};\n\n\n    ref.inputsFormEl.forEach(item => {\n      obj[item.name] = Number(item.value);\n    });\n\n    return obj;\n}\n\nfunction createPromiseQueue({\n  delay: formDelay,\n  step: formStep,\n  amount: formAmount,\n}) {\n  for (let i = formAmount, position = 0; i > 0; i--, position++) {\n    createPromise(position, formDelay + formStep * position)\n    .then(({ position, delay }) =>\n    Notiflix.Notify.success( \n      `✅ Fulfilled promise ${++position} in ${delay}ms`,\n    {\n      fontSize: '20px',\n      timeout: 1000,\n    }\n\n    )\n    )\n    .catch(({ position, delay }) =>\n    Notiflix.Notify.failure(\n      `❌ Rejected promise ${++position} in ${delay}ms`,\n      {\n        fontSize: '20px',\n        timeout: 1000,\n      }\n    )\n\n    );\n  }\n}\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      }else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$ce04d3a99e08e73b$var$ref","formEl","document","querySelector","inputsFormEl","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","param1","formDelay","formStep","step","i","amount","position1","then","param","$parcel$interopDefault","$iU1Pc","Notify","success","concat","fontSize","timeout","catch","failure","$ce04d3a99e08e73b$var$createPromiseQueue","obj","forEach","item","name","Number","value"],"version":3,"file":"03-promises.f6bdbb30.js.map"}