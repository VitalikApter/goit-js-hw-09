{"mappings":"siBAIA,MAAMA,EAAM,CACVC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASG,iBAAiB,gBAwD1C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CA9DbR,EAAIC,OAAOe,iBAAiB,UAE5B,SAAkBC,GAChBA,EAAIC,iBAgBN,UACEV,MAAOW,EACPC,KAAMC,EACNC,OAAQC,IAER,IAAK,IAAIC,EAAID,EAAYE,EAAW,EAAGD,EAAI,EAAGA,IAAKC,IACjDnB,EAAcmB,EAAUN,EAAYE,EAAWI,GAC9CC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,KACnBmB,EAAAC,GAASC,OAAOC,QACd,yBAAyBvB,QAAeC,MAAW,CAEnDuB,SAAU,OACVC,QAAS,QAKVC,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,KACpBmB,EAAAC,GAASC,OAAOK,QACd,wBAAsB3B,QAAeC,MAAW,CAE9CuB,SAAU,OACVC,QAAS,O,CArCfG,CAGF,WAEE,MAAMC,EAAM,GAOV,OAJApC,EAAII,aAAaiC,SAAQC,IACvBF,EAAIE,EAAKC,MAAQC,OAAOF,EAAKG,MAAM,IAG9BL,C,CAZUM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import '../sass/_common.scss';\nimport Notiflix from 'notiflix';\n\n\nconst ref = {\n  formEl: document.querySelector('.form'),\n  inputsFormEl: document.querySelectorAll('.form input'),\n};\n\nref.formEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  createPromiseQueue(formToObj());\n}\n\nfunction formToObj() {\n\n  const obj = {};\n\n\n    ref.inputsFormEl.forEach(item => {\n      obj[item.name] = Number(item.value);\n    });\n\n    return obj;\n}\n\nfunction createPromiseQueue({\n  delay: formDelay,\n  step: formStep,\n  amount: formAmount,\n}) {\n  for (let i = formAmount, position = 0; i > 0; i--, position++) {\n    createPromise(position, formDelay + formStep * position)\n    .then(({ position, delay }) =>\n    Notiflix.Notify.success( \n      `✅ Fulfilled promise ${++position} in ${delay}ms`,\n    {\n      fontSize: '20px',\n      timeout: 1000,\n    }\n\n    )\n    )\n    .catch(({ position, delay }) =>\n    Notiflix.Notify.failure(\n      `❌ Rejected promise ${++position} in ${delay}ms`,\n      {\n        fontSize: '20px',\n        timeout: 1000,\n      }\n    )\n\n    );\n  }\n}\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      }else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$47d4ff9957288465$var$ref","formEl","document","querySelector","inputsFormEl","querySelectorAll","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","formDelay","step","formStep","amount","formAmount","i","position1","then","$parcel$interopDefault","$eWCmQ","Notify","success","fontSize","timeout","catch","failure","$47d4ff9957288465$var$createPromiseQueue","obj","forEach","item","name","Number","value","$47d4ff9957288465$var$formToObj"],"version":3,"file":"03-promises.074d5420.js.map"}